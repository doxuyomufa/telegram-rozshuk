import asyncio
import logging
import os
from pathlib import Path
import aiosqlite
from aiogram import Bot, Dispatcher, types, F
from aiogram.filters import Command
from aiogram.types import (
    ReplyKeyboardMarkup,
    KeyboardButton,
    InlineKeyboardMarkup,
    InlineKeyboardButton,
    FSInputFile
)
from aiogram.exceptions import TelegramConflictError

# ========== –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø ==========
API_TOKEN = os.getenv("API_TOKEN")
if not API_TOKEN:
    raise ValueError("–ù–µ —É–∫–∞–∑–∞–Ω API_TOKEN –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")

DB_PATH = "db.sqlite3"
IMAGES_DIR = Path("images")
IMAGES_DIR.mkdir(exist_ok=True)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s"
)
logger = logging.getLogger(__name__)

bot = Bot(token=API_TOKEN, parse_mode="HTML")
dp = Dispatcher()

# ========== –ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ ==========
main_menu = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="–ó–Ω—è—Ç–∏ –∑ –†–æ–∑—à—É–∫—É"), KeyboardButton(text="–ë—Ä–æ–Ω—é–≤–∞–Ω–Ω—è")],
        [KeyboardButton(text="–í–∏—ó–∑–¥ –∑–∞ –∫–æ—Ä–¥–æ–Ω"), KeyboardButton(text="–°–ó–ß/–ö–æ–º—ñ—Å")],
    ],
    resize_keyboard=True,
    input_field_placeholder="–û–±–µ—Ä—ñ—Ç—å –ø–æ—Å–ª—É–≥—É..."
)

# ========== –¢–ï–ö–°–¢–´ –£–°–õ–£–ì ==========
SERVICE_DATA = {
    "–ó–Ω—è—Ç–∏ –∑ –†–æ–∑—à—É–∫—É": {
        "text": """‚úÖ <b>–ó–Ω—è—Ç—Ç—è –∑ –†–û–ó–®–£–ö–£ –Ω–∞ 1 —Ä—ñ–∫</b>
- –∑ –ø–æ–≤–Ω–æ—é –≥–∞—Ä–∞–Ω—Ç—ñ—î—é –Ω–µ–¥–æ—Ç–æ—Ä–∫–∞–Ω–æ—Å—Ç—ñ
- –æ–Ω–æ–≤–ª–µ–Ω–æ—é –¥–∞—Ç–æ—é –ø—Ä–æ–π–¥–µ–Ω–æ–≥–æ –í–õ–ö
üí∞ <i>–í–∞—Ä—Ç—ñ—Å—Ç—å:</i> <b>4000 $</b>

‚úÖ <b>–ë–†–û–ù–Æ–í–ê–ù–ù–Ø —ñ –≤—ñ–¥—Å—Ç—Ä–æ—á–∫–∞ –Ω–∞ 1 —Ä—ñ–∫</b>
- –¥–ª—è —Ç–∏—Ö, —Ö—Ç–æ –≤ –†–û–ó–®–£–ö–£
- –∑ –≤–∏–∫–ª—é—á–µ–Ω–Ω—è–º —Ä–æ–∑—à—É–∫—É
- –≥–∞—Ä–∞–Ω—Ç—ñ—è –Ω–µ–¥–æ—Ç–æ—Ä–∫–∞–Ω–æ—Å—Ç—ñ –Ω–∞ 1 —Ä—ñ–∫
üí∞ <i>–í–∞—Ä—Ç—ñ—Å—Ç—å:</i> <b>5500 $</b>

üìå <b>–ü—Ä–æ—Ü–µ–¥—É—Ä–∞:</b>
1. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–ª—ñ—î–Ω—Ç–∞ –∑–∞ –ø–∞—Å–ø–æ—Ä—Ç–Ω–∏–º–∏ –¥–∞–Ω–∏–º–∏ —Ç–∞ PDF –∑ —Ä–µ–∑–µ—Ä–≤
2. –ß–∞—Å—Ç–∫–æ–≤–∞ –æ–ø–ª–∞—Ç–∞ 50% + –∞–∫—Ç–∏–≤–∞—Ü—ñ—è –ø–æ—Å–ª—É–≥–∏
3. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤ –±–∞–∑—ñ (–†–µ–∑–µ—Ä–≤+, –û–±–µ—Ä—ñ–≥/–ê—Ä–º–æ—Ä)
4. –û–ø–ª–∞—Ç–∞ –¥—Ä—É–≥–æ—ó —á–∞—Å—Ç–∏–Ω–∏
5. –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –ø–∞–ø–µ—Ä–æ–≤–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤ (–∑–∞ –±–∞–∂–∞–Ω–Ω—è–º)

‚è≥ <b>–¢–∞–π–º—ñ–Ω–≥:</b>
‚ñ™ –ú–∏—Ç—Ç—î–≤–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—è —Ç–∞ —Å–∫—Ä—ñ–Ω—ñ–Ω–≥
‚ñ™ –ó–Ω—è—Ç—Ç—è –∑ —Ä–æ–∑—à—É–∫—É: 3-10 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤
‚ñ™ –ë—Ä–æ–Ω—é–≤–∞–Ω–Ω—è: 3-10 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤
‚ñ™ –ö–æ–º–ø–ª–µ–∫—Å: 5-12 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤

üí≥ <b>–û–ø–ª–∞—Ç–∞:</b>
USDT | BTC | XMR | –ö–∞—Ä—Ç–∞ –£–∫—Ä–∞—ó–Ω–∏

üîí <b>–ì–∞—Ä–∞–Ω—Ç—ñ—ó:</b>
–í—Å—ñ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è, –≤—ñ–¥–≥—É–∫–∏ —Ç–∞ –≥–∞—Ä–∞–Ω—Ç—ñ—ó –Ω–∞–¥–∞—é—Ç—å—Å—è –ø—ñ—Å–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∫–ª—ñ—î–Ω—Ç–∞ —É –ø—Ä–∏–≤–∞—Ç–Ω–æ–º—É –ø–æ—Ä—è–¥–∫—É!

üõ° <b>–ì–ê–†–ê–ù–¢–û–í–ê–ù–ò–ô –†–ï–ó–£–õ–¨–¢–ê–¢ –¢–ê –ü–û–í–ù–ê –ë–ï–ó–ü–ï–ö–ê!</b>

üëâ @victor_reserv001 - –æ–ø–µ—Ä–∞—Ç–æ—Ä
üëâ /start - –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
üëâ /military - –∑–Ω—è—Ç—Ç—è –°–ó–ß""",
        "image": "rozshuk.jpg"
    },
    "–ë—Ä–æ–Ω—é–≤–∞–Ω–Ω—è": {
        "text": """‚úÖ <b>–ë–†–û–ù–Æ–í–ê–ù–ù–Ø —ñ –≤—ñ–¥—Å—Ç—Ä–æ—á–∫–∞ –Ω–∞ 1 —Ä—ñ–∫</b>
- –¥–ª—è —Ç–∏—Ö, —Ö—Ç–æ –Ω–∞ –æ–±–ª—ñ–∫—É
üí∞ <i>–í–∞—Ä—Ç—ñ—Å—Ç—å:</i> <b>3000 $</b>

‚úÖ <b>–ë–†–û–ù–Æ–í–ê–ù–ù–Ø —ñ –≤—ñ–¥—Å—Ç—Ä–æ—á–∫–∞ –Ω–∞ 1 —Ä—ñ–∫</b>
- –¥–ª—è —Ç–∏—Ö, —Ö—Ç–æ –≤ –†–û–ó–®–£–ö–£
- –∑ –≤–∏–∫–ª—é—á–µ–Ω–Ω—è–º —Ä–æ–∑—à—É–∫—É
üí∞ <i>–í–∞—Ä—Ç—ñ—Å—Ç—å:</i> <b>5500 $</b>

üìå <b>–ü—Ä–æ—Ü–µ–¥—É—Ä–∞:</b>
1. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–ª—ñ—î–Ω—Ç–∞ –∑–∞ –ø–∞—Å–ø–æ—Ä—Ç–Ω–∏–º–∏ –¥–∞–Ω–∏–º–∏ —Ç–∞ PDF –∑ —Ä–µ–∑–µ—Ä–≤
2. –ß–∞—Å—Ç–∫–æ–≤–∞ –æ–ø–ª–∞—Ç–∞ 50% + –∞–∫—Ç–∏–≤–∞—Ü—ñ—è –ø–æ—Å–ª—É–≥–∏
3. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤ –±–∞–∑—ñ (–†–µ–∑–µ—Ä–≤+, –û–±–µ—Ä—ñ–≥/–ê—Ä–º–æ—Ä)
4. –û–ø–ª–∞—Ç–∞ –¥—Ä—É–≥–æ—ó —á–∞—Å—Ç–∏–Ω–∏
5. –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤ –∫—É—Ä'—î—Ä–æ–º/–ø–æ—à—Ç–æ—é

‚è≥ <b>–¢–∞–π–º—ñ–Ω–≥:</b>
‚ñ™ –ú–∏—Ç—Ç—î–≤–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—è —Ç–∞ —Å–∫—Ä—ñ–Ω—ñ–Ω–≥
‚ñ™ –ë—Ä–æ–Ω—é–≤–∞–Ω–Ω—è: 3-10 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤
‚ñ™ –ö–æ–º–ø–ª–µ–∫—Å: 5-12 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤

üí≥ <b>–û–ø–ª–∞—Ç–∞:</b>
USDT | BTC | XMR | –ö–∞—Ä—Ç–∞ –£–∫—Ä–∞—ó–Ω–∏

üîí <b>–ì–∞—Ä–∞–Ω—Ç—ñ—ó:</b>
–í—Å—ñ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è, –≤—ñ–¥–≥—É–∫–∏ —Ç–∞ –≥–∞—Ä–∞–Ω—Ç—ñ—ó –Ω–∞–¥–∞—é—Ç—å—Å—è –ø—ñ—Å–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∫–ª—ñ—î–Ω—Ç–∞ —É –ø—Ä–∏–≤–∞—Ç–Ω–æ–º—É –ø–æ—Ä—è–¥–∫—É!

üõ° <b>–ì–ê–†–ê–ù–¢–û–í–ê–ù–ò–ô –†–ï–ó–£–õ–¨–¢–ê–¢ –¢–ê –ü–û–í–ù–ê –ë–ï–ó–ü–ï–ö–ê!</b>

üëâ @victor_reserv001 - –æ–ø–µ—Ä–∞—Ç–æ—Ä
üëâ /start - –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
üëâ /rozshuk - –∑–Ω—è—Ç—Ç—è –∑ —Ä–æ–∑—à—É–∫—É""",
        "image": "bron.jpg"
    },
    "–í–∏—ó–∑–¥ –∑–∞ –∫–æ—Ä–¥–æ–Ω": {
        "text": """‚úÖ <b>–í–∏—ó–∑–¥ –∑–∞ –∫–æ—Ä–¥–æ–Ω</b>
- –í–∏–∫–ª—é—á–µ–Ω–Ω—è –∑ –æ–±–ª—ñ–∫—É –Ω–∞ 5 —Ä–æ–∫—ñ–≤
- –ú–æ–∂–ª–∏–≤—ñ—Å—Ç—å –ø–µ—Ä–µ—Ç–∏–Ω—É –∫–æ—Ä–¥–æ–Ω—É ("–ë—ñ–ª–∏–π –∫–≤–∏—Ç–æ–∫")
üí∞ <i>–í–∞—Ä—Ç—ñ—Å—Ç—å:</i> <b>–≤—ñ–¥ 8000 $</b>

üìå <b>–ü—Ä–æ—Ü–µ–¥—É—Ä–∞:</b>
1. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–ª—ñ—î–Ω—Ç–∞ –∑–∞ –ø–∞—Å–ø–æ—Ä—Ç–Ω–∏–º–∏ –¥–∞–Ω–∏–º–∏ —Ç–∞ PDF –∑ —Ä–µ–∑–µ—Ä–≤
2. –ß–∞—Å—Ç–∫–æ–≤–∞ –æ–ø–ª–∞—Ç–∞ 50% + –∞–∫—Ç–∏–≤–∞—Ü—ñ—è –ø–æ—Å–ª—É–≥–∏
3. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤, –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –ø–æ –±–∞–∑–∞–º
4. –û–ø–ª–∞—Ç–∞ –¥—Ä—É–≥–æ—ó —á–∞—Å—Ç–∏–Ω–∏
5. –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤ –∫—É—Ä'—î—Ä–æ–º/–ø–æ—à—Ç–æ—é

‚è≥ <b>–¢–∞–π–º—ñ–Ω–≥:</b>
‚ñ™ –ú–∏—Ç—Ç—î–≤–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—è —Ç–∞ —Å–∫—Ä—ñ–Ω—ñ–Ω–≥
‚ñ™ –ü—ñ–¥–≥–æ—Ç–æ–≤–∫–∞: 2-5 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤
‚ñ™ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—è: 10-20 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤

üí≥ <b>–û–ø–ª–∞—Ç–∞:</b>
USDT | BTC | XMR | –ö–∞—Ä—Ç–∞ –£–∫—Ä–∞—ó–Ω–∏

üîí <b>–ì–∞—Ä–∞–Ω—Ç—ñ—ó:</b>
–í—Å—ñ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è, –≤—ñ–¥–≥—É–∫–∏ —Ç–∞ –≥–∞—Ä–∞–Ω—Ç—ñ—ó –Ω–∞–¥–∞—é—Ç—å—Å—è –ø—ñ—Å–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∫–ª—ñ—î–Ω—Ç–∞ —É –ø—Ä–∏–≤–∞—Ç–Ω–æ–º—É –ø–æ—Ä—è–¥–∫—É!

üõ° <b>–ì–ê–†–ê–ù–¢–û–í–ê–ù–ò–ô –†–ï–ó–£–õ–¨–¢–ê–¢ –¢–ê –ü–û–í–ù–ê –ë–ï–ó–ü–ï–ö–ê!</b>

üëâ @victor_reserv001 - –æ–ø–µ—Ä–∞—Ç–æ—Ä
üëâ /start - –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
üëâ /military - –≤–∏–≤–µ–¥–µ–Ω–Ω—è –∑ –ó–°""",
        "image": "vyezd.jpg"
    },
    "–°–ó–ß/–ö–æ–º—ñ—Å": {
        "text": """‚úÖ <b>–ó–Ω—è—Ç—Ç—è –°–ó–ß</b>
- –Ω–∞ –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–∏–π 1 —Ä—ñ–∫
üí∞ <i>–í–∞—Ä—Ç—ñ—Å—Ç—å:</i> <b>5000 $</b>

‚úÖ <b>–ó–≤—ñ–ª—å–Ω–µ–Ω–Ω—è –∑—ñ —Å–ª—É–∂–±–∏</b>
- –∑–∞ —Å—Ç–∞–Ω–æ–º –∑–¥–æ—Ä–æ–≤'—è
üí∞ <i>–í–∞—Ä—Ç—ñ—Å—Ç—å:</i> <b>–≤—ñ–¥ 8000 $</b>

üìå <b>–ü—Ä–æ—Ü–µ–¥—É—Ä–∞:</b>
1. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–ª—ñ—î–Ω—Ç–∞ –∑–∞ –ø–∞—Å–ø–æ—Ä—Ç–Ω–∏–º–∏ –¥–∞–Ω–∏–º–∏ —Ç–∞ PDF –∑ —Ä–µ–∑–µ—Ä–≤
2. –ß–∞—Å—Ç–∫–æ–≤–∞ –æ–ø–ª–∞—Ç–∞ 50% + –∞–∫—Ç–∏–≤–∞—Ü—ñ—è –ø–æ—Å–ª—É–≥–∏
3. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤, –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –ø–æ –±–∞–∑–∞–º
4. –û–ø–ª–∞—Ç–∞ –¥—Ä—É–≥–æ—ó —á–∞—Å—Ç–∏–Ω–∏
5. –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤ –∫—É—Ä'—î—Ä–æ–º/–ø–æ—à—Ç–æ—é

‚è≥ <b>–¢–∞–π–º—ñ–Ω–≥:</b>
‚ñ™ –ú–∏—Ç—Ç—î–≤–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—è —Ç–∞ —Å–∫—Ä—ñ–Ω—ñ–Ω–≥
‚ñ™ –ü—ñ–¥–≥–æ—Ç–æ–≤–∫–∞: 2-5 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤
‚ñ™ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—è: 10-20 —Ä–æ–±–æ—á–∏—Ö –¥–Ω—ñ–≤

üí≥ <b>–û–ø–ª–∞—Ç–∞:</b>
USDT | BTC | XMR | –ö–∞—Ä—Ç–∞ –£–∫—Ä–∞—ó–Ω–∏

üîí <b>–ì–∞—Ä–∞–Ω—Ç—ñ—ó:</b>
–í—Å—ñ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è, –≤—ñ–¥–≥—É–∫–∏ —Ç–∞ –≥–∞—Ä–∞–Ω—Ç—ñ—ó –Ω–∞–¥–∞—é—Ç—å—Å—è –ø—ñ—Å–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∫–ª—ñ—î–Ω—Ç–∞ —É –ø—Ä–∏–≤–∞—Ç–Ω–æ–º—É –ø–æ—Ä—è–¥–∫—É!

üõ° <b>–ì–ê–†–ê–ù–¢–û–í–ê–ù–ò–ô –†–ï–ó–£–õ–¨–¢–ê–¢ –¢–ê –ü–û–í–ù–ê –ë–ï–ó–ü–ï–ö–ê!</b>

üëâ @victor_reserv001 - –æ–ø–µ—Ä–∞—Ç–æ—Ä
üëâ /start - –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
üëâ /rozshuk - –∑–Ω—è—Ç—Ç—è –∑ —Ä–æ–∑—à—É–∫—É""",
        "image": "szch.jpg"
    }
}

# ========== –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò ==========
@dp.message(Command("start"))
async def start(message: types.Message):
    await message.answer("–ü—Ä–∏–≤—ñ—Ç! –©–æ–± –ø—Ä–æ–¥–æ–≤–∂–∏—Ç–∏, –Ω–∞–ø–∏—à–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç: 5 + 3 = ?")

@dp.message(F.text == "8")
async def after_captcha(message: types.Message):
    try:
        async with aiosqlite.connect(DB_PATH) as db:
            await db.execute(
                "CREATE TABLE IF NOT EXISTS users (id INTEGER PRIMARY KEY, username TEXT, interactions INT)"
            )
            await db.execute(
                "INSERT OR IGNORE INTO users (id, username, interactions) VALUES (?, ?, 0)",
                (message.from_user.id, message.from_user.username),
            )
            await db.commit()
        await message.answer("–ß—É–¥–æ–≤–æ, –≤–∏ –ø—Ä–æ–π—à–ª–∏ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É! –û–±–µ—Ä—ñ—Ç—å –ø–æ—Å–ª—É–≥—É:", reply_markup=main_menu)
    except Exception as e:
        logger.error(f"Database error: {e}")
        await message.answer("–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑ /start")

@dp.message(F.text == "–ó–Ω—è—Ç–∏ –∑ –†–æ–∑—à—É–∫—É")
async def handle_rozshuk(message: types.Message):
    await handle_service(message, "–ó–Ω—è—Ç–∏ –∑ –†–æ–∑—à—É–∫—É")

@dp.message(F.text == "–ë—Ä–æ–Ω—é–≤–∞–Ω–Ω—è")
async def handle_bron(message: types.Message):
    await handle_service(message, "–ë—Ä–æ–Ω—é–≤–∞–Ω–Ω—è")

@dp.message(F.text == "–í–∏—ó–∑–¥ –∑–∞ –∫–æ—Ä–¥–æ–Ω")
async def handle_vyezd(message: types.Message):
    await handle_service(message, "–í–∏—ó–∑–¥ –∑–∞ –∫–æ—Ä–¥–æ–Ω")

@dp.message(F.text == "–°–ó–ß/–ö–æ–º—ñ—Å")
async def handle_szch(message: types.Message):
    await handle_service(message, "–°–ó–ß/–ö–æ–º—ñ—Å")

async def handle_service(message: types.Message, service_name: str):
    service = SERVICE_DATA.get(service_name)
    if not service:
        return await message.answer("–¶—è –ø–æ—Å–ª—É–≥–∞ —Ç–∏–º—á–∞—Å–æ–≤–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
    
    try:
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–∞
        await message.answer(
            service["text"],
            parse_mode="HTML",
            disable_web_page_preview=True
        )
        
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ
        photo_path = IMAGES_DIR / service["image"]
        if photo_path.exists():
            await message.answer_photo(
                FSInputFile(photo_path),
                caption="üîç –î–µ—Ç–∞–ª—å–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –≤–∏—â–µ üëÜ"
            )
        
        # –ö–Ω–æ–ø–∫–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏
        consultation_btn = InlineKeyboardMarkup(
            inline_keyboard=[[
                InlineKeyboardButton(
                    text="üî∑ –û–¢–†–ò–ú–ê–¢–ò –ö–û–ù–°–£–õ–¨–¢–ê–¶–Ü–Æ üî∑", 
                    url="https://t.me/victor_reserv001"
                )
            ]]
        )
        await message.answer(
            "–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ –¥–ª—è –∑–≤'—è–∑–∫—É –∑ —Ñ–∞—Ö—ñ–≤—Ü–µ–º:",
            reply_markup=consultation_btn
        )
        
    except Exception as e:
        logger.error(f"Error processing {service_name}: {e}")
        await message.answer("‚ö†Ô∏è –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.")

# ========== –ë–ê–ó–ê –î–ê–ù–ù–´–• ==========
async def init_db():
    try:
        async with aiosqlite.connect(DB_PATH) as db:
            await db.execute(
                "CREATE TABLE IF NOT EXISTS users (id INTEGER PRIMARY KEY, username TEXT, interactions INT)"
            )
            await db.commit()
    except Exception as e:
        logger.error(f"Database init error: {e}")

# ========== –ó–ê–ü–£–°–ö –ë–û–¢–ê ==========
async def main():
    await init_db()
    await bot.delete_webhook(drop_pending_updates=True)
    
    while True:
        try:
            logger.info("Starting bot polling...")
            await dp.start_polling(bot, allowed_updates=dp.resolve_used_update_types())
        except TelegramConflictError:
            logger.warning("Conflict detected, restarting in 5 sec...")
            await asyncio.sleep(5)
        except Exception as e:
            logger.error(f"Fatal error: {e}, restarting in 10 sec...")
            await asyncio.sleep(10)

if __name__ == "__main__":
    asyncio.run(main())
